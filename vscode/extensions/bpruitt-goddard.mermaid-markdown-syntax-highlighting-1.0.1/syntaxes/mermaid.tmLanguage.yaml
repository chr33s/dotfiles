---
fileTypes: []
injectionSelector: L:markup.fenced_code.block.markdown
patterns:
- include: '#mermaid-code-block'
- include: '#mermaid'
repository:
  mermaid-code-block:
    begin: (?<=[`~])mermaid(\s+[^`~]*)?$
    end: (^|\G)(?=\s*[`~]{3,}\s*$)
    patterns:
    - include: '#mermaid'
  mermaid:
    patterns:
    - comment: Graph
      begin: \b(graph)\s+([A-Za-z\ 0-9]+)
      beginCaptures:
        '1':
          name: keyword.control.mermaid
        '2':
          name: entity.name.function.mermaid
      patterns:
      - match: \%%.*
        name: comment
      - match: \b(subgraph)\s+([A-Za-z\ 0-9]+)
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: entity.name.function.mermaid
        name: meta.function.mermaid
      - match: \b(end|RB|BT|RL|TD|LR)\b
        name: keyword.control.mermaid
      - comment: '(Entity From)(Graph Link)'
        begin: !regex |-
          (\b[-\w]+\b\s*) # Entity From
          (-?-[-\>]\|?|=?=[=\>]|(?:\.-|-\.)-?\>?) # Graph Link
        beginCaptures:
          '1':
            name: variable
          '2':
            name: keyword.control.mermaid
        patterns:
        - match: \%%.*
          name: comment
        - comment: '(Graph Link Text)?(Graph Link)(Entity To)?(Edge/Shape)?(Text)?(Edge/Shape)?'
          match: !regex |-
            (\s*[.'_\-!#$%^&*+=?,:\\/"\w\s]*)? # Graph Link Text?
            (-?-[-\>]\|?|=?=[=\>]|(?:\.-|-\.)-?\>?|\|) # Graph Link
            (\s*[-\w]+\b) # Entity To
            (\[|\(+|\>|\{)? # Edge/Shape?
            (\s*[-\w]+\b)? # Text
            (\]|\)+|\})? # Edge/shape
          captures:
            '1':
              name: string
            '2':
              name: keyword.control.mermaid
            '3':
              name: variable
            '4':
              name: keyword.control.mermaid
            '5':
              name: string
            '6':
              name: keyword.control.mermaid
        - comment: '(Entity To)(Edge/Shape)?(Text)?(Edge/Shape)?'
          match: !regex |-
            (\s*[-\w]+\b) # Entity To
            (\[|\(+|\>|\{)? # Edge/Shape?
            (\s*[-\w]+\b)? # Text?
            (\]|\)+|\})? # Edge/Shape?
          captures:
            '1':
              name: variable
            '2':
              name: keyword.control.mermaid
            '3':
              name: string
            '4':
              name: keyword.control.mermaid
        end: "$"
      - comment: '(Entity)(Edge/Shape)(Text)(Edge/Shape)'
        begin: !regex |-
          (\b[-\w]+\b\s*) # Entity
          (\[|\(+|\>|\{) # Edge/Shape
          (\s*["\(\)$&%\^/#.,?!;:*+=<>\'\\\-\w\s]*) # Text
          (\]|\)+|\}) # Edge/Shape
        beginCaptures:
          '1':
            name: variable
          '2':
            name: keyword.control.mermaid
          '3':
            name: string
          '4':
            name: keyword.control.mermaid
        patterns:
        - comment: '(Graph Link)(Graph Link Text)(Graph Link)(Entity)(Edge/Shape)(Text)(Edge/Shape)'
          match: !regex |-
            (\s*-?-[-\>]\|?|=?=[=\>]|(?:\.-|-\.)-?\>?) # Graph Link
            (\s*[-\w\s]+\b) # Graph Link Text
            (-?-[-\>]\|?|=?=[=\>]|(?:\.-|-\.)-?\>?|\|) # Graph Link
            (\s*\b[-\w]+\b\s*) # Entity
            (\[|\(+|\>|\{) # Edge/Shape
            (\s*[-\w\s]+\b) # Text
            (\]|\)+|\}) # Edge/Shape
          captures:
            '1':
              name: keyword.control.mermaid
            '2':
              name: string
            '3':
              name: keyword.control.mermaid
            '4':
              name: variable
            '5':
              name: keyword.control.mermaid
            '6':
              name: string
            '7':
              name: keyword.control.mermaid
        end: "$"
      - comment: '(Class)(Node(s))(ClassName)'
        match: !regex |-
          \s*(class) # class
          \s+(\b[-,\w]+) # Node(s)
          \s+(\b\w+\b) # ClassName
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: variable
          '3':
            name: string
      - comment: '(ClassDef)(ClassName)(Styles)'
        match: !regex |-
          \s*(classDef) # classDef
          \s+(\b\w+\b) # ClassName
          \s+(\b[-,:;#\w]+) # Styles
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: variable
          '3':
            name: string
      - comment: '(Click)(Entity)(Link)?(Tooltip)'
        match: !regex |-
          \s*(click) # Click
          \s+(\b[-\w]+\b\s*) # Entity
          (\b\w+\b)? # Link/callback?
          \s("*.*") # Tooltip
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: variable
          '3':
            name: variable
          '4':
            name: string
      end: (^|\G)(?=\s*[`~]{3,}\s*$)
    - comment: Sequence Diagram
      begin: \b(sequenceDiagram)
      beginCaptures:
        '1':
          name: keyword.control.mermaid
      patterns:
      - match: \%%.*
        name: comment
      - comment: '(participant)(Actor)(as)?(Label)?'
        match: !regex |-
          \s*(participant) # participant
          \s+([-\w]+) # Actor
          \s+(as)? # as?
          (\s[\w]+)? # Label?
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: variable
          '3':
            name: keyword.control.mermaid
          '4':
            name: string
      - comment: '(Actor)(Arrow)(Actor)(:)(Message)'
        match: !regex |-
          \s*(\b[-\w]+\b\s*) # Actor
          (-?-(?:\>|x)\>?[+-]?) # Arrow
          (\s*[-\w]+\b) # Actor
          (:) # :
          (.*) # Message
        captures:
          '1':
            name: variable
          '2':
            name: keyword.control.mermaid
          '3':
            name: variable
          '4':
            name: keyword.control.mermaid
          '5':
            name: string
      - comment: '(activate/deactivate)(Actor)'
        match: !regex |-
          \s*((?:de)?activate) # Activate/Deactivate
          \s+(\b[-\w]+\b\s*) # Actor
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: variable
      - comment: '(Note)(direction)(Actor)(,)?(Actor)?(:)(Message)'
        match: !regex |-
          \s*(Note) # Note
          \s+((?:left|right)\sof|over) # Direction
          \s+(\b[-\w]+\b\s*) # Actor
          (,)? # ,?
          (\b[-\w]+\b\s*)? # Actor
          (:) # :
          (.*) # Message
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: entity.name.function.mermaid
          '3':
            name: variable
          '4':
            name: keyword.control.mermaid
          '5':
            name: variable
          '6':
            name: keyword.control.mermaid
          '7':
            name: string
      - comment: '(loop)(loop text)'
        match: !regex |-
          \s*(loop) # loop
          \s+(.*) # Loop Text
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: string
      - comment: '(end)'
        match: \s*(end)
        captures:
          '1':
            name: keyword.control.mermaid
      - comment: '(alt/else/opt)(text)'
        match: !regex |-
          \s*((?:alt)|(?:else)|(?:opt)) # alt/else/opt
          \s+(.*) # text
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: string
      end: (^|\G)(?=\s*[`~]{3,}\s*$)
    - comment: Gantt Diagram
      begin: \b(gantt)
      beginCaptures:
        '1':
          name: keyword.control.mermaid
      patterns:
      - match: \%%.*
        name: comment
      - match: !regex |-
          (dateFormat)\s+ # dateFormat
          ([\w-]+) # format
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: entity.name.function.mermaid
      - match: !regex |-
          (axisFormat)\s+ # axisFormat
          ([\w\%/-]+) # format
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: entity.name.function.mermaid
      - match: !regex |-
          (title)\s+ # title
          (\s*["\(\)$&%\^/#.,?!;:*+=<>\'\\\-\w\s]*) # text
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: string
      - match: !regex |-
          (section)\s+ # section
          (\s*["\(\)$&%\^/#.,?!;:*+=<>\'\\\-\w\s]*) # text
        captures:
          '1':
            name: keyword.control.mermaid
          '2':
            name: string
      - begin: !regex |-
          \s(.*) # Task Text
          (:) # :
        beginCaptures:
          '1':
            name: string
          '2':
            name: keyword.control.mermaid
        patterns:
        - match: (crit|done|active|after)
          name: entity.name.function.mermaid
        - match: \%%.*
          name: comment
        end: "$"
      end: (^|\G)(?=\s*[`~]{3,}\s*$)
scopeName: markdown.mermaid.codeblock
